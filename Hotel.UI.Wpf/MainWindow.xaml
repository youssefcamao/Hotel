<Window x:Class="Hotel.UI.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vms="clr-namespace:Hotel.UI.Wpf.MVVM.ViewModels"
        xmlns:views="clr-namespace:Hotel.UI.Wpf.MVVM.Views"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
     TextElement.Foreground="{DynamicResource MaterialDesignBody}"
     TextElement.FontWeight="Regular"
     TextElement.FontSize="13"
     TextOptions.TextFormattingMode="Ideal"
     TextOptions.TextRenderingMode="Auto"
     FontFamily="{DynamicResource MaterialDesignFont}"
        xmlns:local="clr-namespace:Hotel.UI.Wpf"
        mc:Ignorable="d"
        Title="Hotel" Height="850" Width="1200" MinHeight="850" MinWidth="1200" 
        ResizeMode="CanResize" WindowStyle="None"
    Background="{x:Null}"
    WindowStartupLocation="CenterScreen"
        AllowsTransparency="True">
    <WindowChrome.WindowChrome>
        <WindowChrome 
        CaptionHeight="0"
        ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>
    <Grid>
        <Grid.Resources>
            <DataTemplate DataType="{x:Type vms:LoginViewModel}">
                <views:LoginView Password="{Binding UserPassword, Mode=OneWayToSource}" LoginCommand="{Binding LoginCommand}"/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vms:AdminViewModel}" x:Name="adminViewModel">
                <views:AdminView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vms:UserViewModel}">
                <views:UserView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vms:SignupViewModel}">
                <views:SignupView Password="{Binding Password, Mode=OneWayToSource}"/>
            </DataTemplate>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <materialDesign:ColorZone
            Grid.Row="0"        
            Padding="10"
                    Mode="PrimaryMid"
                    DockPanel.Dock="Top"
                MouseLeftButtonDown="Card_MouseLeftButtonDown"
                MouseDoubleClick="Btn_Maximize" CornerRadius="15,15,0,0">
            <DockPanel FlowDirection="RightToLeft" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        <Button
                                Margin="10,0,0,0"
                                ToolTip="WindowClose"
                                Content="{materialDesign:PackIcon Kind=CloseThick, Size=24}"
                            Click="Btn_ExitApp"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                        <Button
                                Margin="10,0,0,0"
                                ToolTip="Window Restore"
                                Content="{materialDesign:PackIcon Kind=WindowRestore, Size=24}"
                                Click="Btn_Maximize"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                        <Button
                                Margin="10,0,0,0"
                                ToolTip="Window Minimize"
                                Content="{materialDesign:PackIcon Kind=WindowMinimize, Size=24}"
                                Click="Btn_MinimizeApp"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                    </StackPanel>
                    <TextBlock Text="{Binding CurrentViewModel.CurrentUserString}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" FontWeight="SemiBold" Grid.Column="0" Grid.ColumnSpan="2"/>
                    <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                        <Button
                            x:Name="ChangeThemeButton"    
                            Margin="0,0,10,0"
                                ToolTip="Change Theme Mode"
                                Content="{materialDesign:PackIcon Kind=Brightness6, Size=24}"
                                Click="themeToggle_Click"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                        <ToggleButton
                                Margin="0,0,10,0"
                                x:Name="MenuToggleButton"
                                IsChecked="False"
                                Visibility="Visible"
                            Width="30"
                                VerticalAlignment="Center"
                                AutomationProperties.Name="HamburgerToggleButton">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignHamburgerToggleButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Visibility, RelativeSource={RelativeSource Self}}" Value="Collapsed">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </StackPanel>
                </Grid>
            </DockPanel>
        </materialDesign:ColorZone>
            <materialDesign:Card Background="{DynamicResource MaterialDesignPaper}" Grid.Row="1" materialDesign:ShadowAssist.ShadowDepth="Depth4">
            <ContentControl x:Name="ViewController" Content="{Binding CurrentViewModel}"/>
            </materialDesign:Card>
    </Grid>
</Window>
